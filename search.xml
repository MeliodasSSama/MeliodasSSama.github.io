<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>pictest</title>
    <url>/2020/05/19/pictest/</url>
    <content><![CDATA[<h1 id="图片测试"><a href="#图片测试" class="headerlink" title="图片测试"></a>图片测试</h1><p><img src="/.com//.._posts%5Cpictest%5Cjt.PNG" alt></p>
]]></content>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7-Oracle11.2.0.3图形界面安装</title>
    <url>/2020/05/18/Centos7-Oracle11-2-0-3%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="Centos-Oracle11安装"><a href="#Centos-Oracle11安装" class="headerlink" title="Centos/Oracle11安装"></a>Centos/Oracle11安装</h1><h2 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h2><p>centos7没有相关安装包可用，可下载pdksh的rpm包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget  http://vault.centos.org/5.11/os/x86_64/CentOS/pdksh-5.2.14-37.el5_8.1.x86_64.rpm</span><br><span class="line">rpm -ivh pdksh-5.2.14-37.el5_8.1.x86_64.rpm</span><br></pre></td></tr></table></figure>

<p>接着安装其他依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install binutils compat-libstdc++-33 elfutils-libelf elfutils-libelf-devel expat gcc gcc-c++ glibc glibc-common glibc-devel glibc-headers libaio libaio-devel libgcc libstdc++ libstdc++-devel make pdksh sysstat unixODBC unixODBC-devel</span><br></pre></td></tr></table></figure>



<h2 id="修改主机名和DNS"><a href="#修改主机名和DNS" class="headerlink" title="修改主机名和DNS"></a>修改主机名和DNS</h2><p>主机名修改为myhostname:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下内容</span></span><br><span class="line"><span class="meta">#</span><span class="bash">主机名</span></span><br><span class="line">myhostname</span><br></pre></td></tr></table></figure>

<p>该DNS</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line"><span class="meta">#</span><span class="bash">添加以下内容  ip换成自己的</span></span><br><span class="line">192.168.38.144   myhostname</span><br></pre></td></tr></table></figure>

<h2 id="优化系统内核参数"><a href="#优化系统内核参数" class="headerlink" title="优化系统内核参数"></a>优化系统内核参数</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下内容</span></span><br><span class="line">fs.aio-max-nr=1048576</span><br><span class="line">fs.file-max=6815744</span><br><span class="line">kernel.shmall=2097152</span><br><span class="line">kernel.shmmni=4096</span><br><span class="line">kernel.shmmax = 2147483648</span><br><span class="line">kernel.sem=250 32000 100 128</span><br><span class="line">net.ipv4.ip_local_port_range=9000 65500</span><br><span class="line">net.core.rmem_default=262144</span><br><span class="line">net.core.rmem_max=4194304</span><br><span class="line">net.core.wmem_default=262144</span><br><span class="line">net.core.wmem_max=1048586</span><br></pre></td></tr></table></figure>

<p>其中：kernel.shmmax为内存的一半，比如内存为4G，则kernel.shmmax=210241024*1024=2147483648 使参数生效</p>
<p>接着执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>

<h2 id="对oracle帐号进行资源限制"><a href="#对oracle帐号进行资源限制" class="headerlink" title="对oracle帐号进行资源限制"></a>对oracle帐号进行资源限制</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/security/limits.conf</span><br><span class="line"><span class="meta">#</span><span class="bash">添加如下内容</span></span><br><span class="line">oracle              soft    nproc   2047</span><br><span class="line">oracle              hard    nproc   16384</span><br><span class="line">oracle              soft    nofile  1024</span><br><span class="line">oracle              hard    nofile  65536</span><br></pre></td></tr></table></figure>

<h2 id="交换分区等设置"><a href="#交换分区等设置" class="headerlink" title="交换分区等设置"></a>交换分区等设置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">umount /dev/shm</span><br><span class="line">fuser -km /dev/shm</span><br><span class="line">mount -t tmpfs -o size=3072m tmpfs /dev/shm</span><br></pre></td></tr></table></figure>

<p>以上设置的是tmpfs有3G的空间，但是开机启动后就复原了</p>
<p>接着：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/rc.local</span><br><span class="line"><span class="meta">#</span><span class="bash">添加以下内容</span></span><br><span class="line">mount -t tmpfs -o size=3072m tmpfs /dev/shm</span><br></pre></td></tr></table></figure>

<p>接着执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/rc.d/rc.local</span><br></pre></td></tr></table></figure>



<h2 id="创建oracle用户和oracle用户组"><a href="#创建oracle用户和oracle用户组" class="headerlink" title="创建oracle用户和oracle用户组"></a>创建oracle用户和oracle用户组</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd oinstall </span><br><span class="line">groupadd dba</span><br><span class="line">useradd -g oinstall -G dba oracle  </span><br><span class="line">passwd oracle</span><br></pre></td></tr></table></figure>



<h2 id="创建Oracle软件目录"><a href="#创建Oracle软件目录" class="headerlink" title="创建Oracle软件目录"></a>创建Oracle软件目录</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /u01/app/oracle/product/11.2.0.4/db_1</span><br><span class="line">chown -R oracle:oinstall /u01</span><br><span class="line">chmod -R 775 /u01</span><br></pre></td></tr></table></figure>

<p>修改环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su - oracle</span><br><span class="line">vim .bash_profile</span><br><span class="line">export ORACLE_BASE=/u01/app/oracle</span><br><span class="line">export ORACLE_HOME=$ORACLE_BASE/product/11.2.0.4/db_1</span><br><span class="line">export ORACLE_SID=prod</span><br><span class="line">export PATH=$ORACLE_HOME/bin:$PATH</span><br><span class="line">export NLS_LANG=AMERICAN_AMERICA.ZHS16GBK</span><br><span class="line">export NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI:SS'</span><br><span class="line">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$ORACLE_HOME/lib</span><br><span class="line"></span><br><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure>

<h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><p>关闭selinux:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br><span class="line"></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure>

<p>查看防火墙</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status firewalld.service</span><br></pre></td></tr></table></figure>

<p>关闭防火墙</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>

<p>端口开放</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=1521/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<h2 id="图形界面依赖"><a href="#图形界面依赖" class="headerlink" title="图形界面依赖"></a>图形界面依赖</h2><p>解压oracle  执行runINstaller文件</p>
<p>如果遇到报错xdpyinfo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install xdpyinfo</span><br><span class="line">su -l root</span><br><span class="line">xhost +SI:localuser:oracle</span><br><span class="line"><span class="meta">#</span><span class="bash">切换到oracle再次执行runInstaller</span></span><br></pre></td></tr></table></figure>

<p>然后安装就可以了。</p>
<h2 id="数据库监听配置"><a href="#数据库监听配置" class="headerlink" title="数据库监听配置"></a>数据库监听配置</h2><p>监听</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">netca</span><br></pre></td></tr></table></figure>

<p>创建数据库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dbca</span><br></pre></td></tr></table></figure>

<p>【实例及监听启动关闭操作】<br>实例的启动关闭:<br>sqlplus / as sysdba<br>startup 启动<br>shutdown immediate 关闭<br>select status from v$instance  查看实例状态</p>
<p>监听启动关闭:<br>lsnrctl status  查看状态<br>lsnrctl start  启动监听<br>lsnrctl stop  关闭监听<br>alter system register;  注册监听</p>
<h2 id="创建用户远程连接"><a href="#创建用户远程连接" class="headerlink" title="创建用户远程连接"></a>创建用户远程连接</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> bigdata <span class="keyword">identified</span> <span class="keyword">by</span> bigdata;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">connect</span>, <span class="keyword">resource</span> <span class="keyword">to</span> bigdata;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle基本操作</title>
    <url>/2020/05/08/Oracle%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1 id="Oracle基本操作"><a href="#Oracle基本操作" class="headerlink" title="Oracle基本操作"></a>Oracle基本操作</h1><h2 id="配置访问"><a href="#配置访问" class="headerlink" title="配置访问"></a>配置访问</h2><ol>
<li><p>直接连接</p>
<p>只支持oracle10G以上。sqlplus 用户名/密码@ip地址[:端口]/service_name [as sysdba]。</p>
</li>
<li><p>通过配置文件连接</p>
<p>编辑$ORACLE_HOME/NETWORK/ADMIN/tnsnames.ora文件如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ORCL_SIT &#x3D;</span><br><span class="line">  (DESCRIPTION &#x3D;</span><br><span class="line">    (ADDRESS &#x3D; (PROTOCOL &#x3D; TCP)(HOST &#x3D; toughhou)(PORT &#x3D; 1521))</span><br><span class="line">    (CONNECT_DATA &#x3D;</span><br><span class="line">      (SERVER &#x3D; DEDICATED)</span><br><span class="line">      (SERVICE_NAME &#x3D; ORCL)</span><br><span class="line">    )</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<p>使用 sqlplus scott/scott@ORCL_SIT 连接数据库</p>
</li>
</ol>
<h2 id="常用查询语法"><a href="#常用查询语法" class="headerlink" title="常用查询语法"></a>常用查询语法</h2><p><strong>oracle没有limit，使用rownum来提取指定行</strong></p>
<p>提取第一行：where rownum=1</p>
<p>提取第二行： select rownum,id,name from student where rownum =2</p>
<p>提取第前3行：select rownum,id,name from student where rownum &lt;3</p>
<p>提取2行以后的：select * from(select rownum no ,id,name from student) where no&gt;2</p>
<p><strong>查询用户和角色相关信息</strong></p>
<p>查询当前用户：select user from dual; 或 select * from user_users; </p>
<p>查询数据库用户的基本信息：select * from DBA_USERS;</p>
<p>查询当前用户的角色： select * from user_role_privs;</p>
<p>查询某个用户的角色：select * from dba_role_privs where grantee=’用户名’;</p>
<p>查询所有用户的角色： select * from dba_role_privs;</p>
<p><strong>查询表和表空间相关信息</strong></p>
<p>查询当前用户的所有表和行数：select table_name,num_rows from user_tables;</p>
<p>查看用户所在的表空间：select username,default_tablespace from dba_users order by username;</p>
<p>查询表的大小：SELECT segment_name AS TABLENAME,round(BYTES/1024/1024,2)  FROM user_segments WHERE segment_name=’表名’（单位是M）</p>
<h2 id="导出-导入数据库"><a href="#导出-导入数据库" class="headerlink" title="导出/导入数据库"></a>导出/导入数据库</h2><p>首先查询库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select name from v$database;</span><br></pre></td></tr></table></figure>

<p>导出数据库的某些表：</p>
<p>exp test/test123@db_name file=/tmp/user.dmp tables=user_table,log_table</p>
<p>例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exp scott&#x2F;tiger@127.0.0.1&#x2F;HELOWIN file&#x3D;&#x2F;tmp&#x2F;scott.dmp tables&#x3D;emp</span><br></pre></td></tr></table></figure>

<p>导出某个库：</p>
<p>exp user/pwd@db_name full=y file=D:\database.dmp</p>
<p>导出某一用户下所有的对象：</p>
<p>exp user/pwd@db_name owner=(system,sys) file=/tmp/owner.dmp</p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="sqlplus-的使用"><a href="#sqlplus-的使用" class="headerlink" title="sqlplus 的使用"></a>sqlplus 的使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus 用户名&#x2F;密码@ip&#x2F;服务名</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus yht_usr&#x2F;B8fhr65V3p@10.88.159.5&#x2F;yhtndb</span><br></pre></td></tr></table></figure>

<p>数据库和服务器都在同一台机子上，不需要填写服务名。</p>
<p>例如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus scott&#x2F;tiger</span><br></pre></td></tr></table></figure>



<p>sqlplus 以 sysdba身份登录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sqlplus &quot;&#x2F;as sysdba&quot;</span><br></pre></td></tr></table></figure>

<p>切换成管理员</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conn &#x2F; as sysdba</span><br></pre></td></tr></table></figure>

<p>切换成其他用户</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conn 用户名&#x2F;密码</span><br></pre></td></tr></table></figure>



<h3 id="数据库字典"><a href="#数据库字典" class="headerlink" title="数据库字典"></a>数据库字典</h3><p>数据库字典：<br>是数据库提供的表，用来查询数据库的信息。<br>dba_users 表就是用来查询 用户信息。要用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">desc dba_users</span><br></pre></td></tr></table></figure>



<h3 id="查看当前用户"><a href="#查看当前用户" class="headerlink" title="查看当前用户"></a>查看当前用户</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">show user</span><br></pre></td></tr></table></figure>

<h3 id="查询当前所有用户名"><a href="#查询当前所有用户名" class="headerlink" title="查询当前所有用户名"></a>查询当前所有用户名</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select username from dba_users</span><br></pre></td></tr></table></figure>

<h4 id="查询所有用户以及用户对应的表空间"><a href="#查询所有用户以及用户对应的表空间" class="headerlink" title="查询所有用户以及用户对应的表空间"></a>查询所有用户以及用户对应的表空间</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select username,DEFAULT_TABLESPACE from dba_users;</span><br></pre></td></tr></table></figure>



<h3 id="查看当前用户下所有的表名"><a href="#查看当前用户下所有的表名" class="headerlink" title="查看当前用户下所有的表名"></a>查看当前用户下所有的表名</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set linesize 150;</span><br><span class="line">select OWNER,TABLE_NAME,TABLESPACE_NAME from all_tables where owner&#x3D;&#39;用户名大写&#39;;</span><br><span class="line">select OWNER,TABLE_NAME,TABLESPACE_NAME from all_tables where owner&#x3D;&#39;SCOTT&#39;;</span><br></pre></td></tr></table></figure>



<h4 id="查询用户下某个表"><a href="#查询用户下某个表" class="headerlink" title="查询用户下某个表"></a>查询用户下某个表</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from 用户.表名;</span><br><span class="line">select * from scott.dept;</span><br></pre></td></tr></table></figure>



<h4 id="查询数据库总体大小"><a href="#查询数据库总体大小" class="headerlink" title="查询数据库总体大小"></a>查询数据库总体大小</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select a.tablespace_name, total, free, total-free as used from </span><br><span class="line">(select tablespace_name, sum(bytes)&#x2F;1024&#x2F;1024 as total from dba_data_files group by tablespace_name) a, </span><br><span class="line">(select tablespace_name, sum(bytes)&#x2F;1024&#x2F;1024 as free from dba_free_space group by tablespace_name) b</span><br><span class="line">where a.tablespace_name &#x3D; b.tablespace_name;</span><br></pre></td></tr></table></figure>

<p>单位MB</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>tar分卷压缩</title>
    <url>/2020/05/08/tar%E5%88%86%E5%8D%B7%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<h4 id="使用tar命令对文件或者文件夹进行分卷压缩"><a href="#使用tar命令对文件或者文件夹进行分卷压缩" class="headerlink" title="使用tar命令对文件或者文件夹进行分卷压缩"></a>使用tar命令对文件或者文件夹进行分卷压缩</h4><p>分卷压缩</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar czvf - (文件名或者文件夹路径)  | split -b （分卷大小，单位字节，可写500M）  - 目标名字.tar.gz</span><br></pre></td></tr></table></figure>

<p>例如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar czvf - ../FLASK_WEB/BBS.zip  | split -b 500  - test.tar.gz</span><br></pre></td></tr></table></figure>

<p>以上将../FLASK_WEB/BBS.zip 按照500字节分卷打包成 test.tar.gz</p>
<p>再如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar czvf - ../IDA\ 6.8/  | split -b 50M  - test.tar.gz</span><br></pre></td></tr></table></figure>

<p>将上级目录的上级目录下的IDA 6.8文件夹下所有文件全部打包 按照50M的分片压缩成test.tar.gz</p>
<p>如果网速比较块就大一点 800-900M,如果网速不好，就500M。</p>
<h4 id="合并分卷后的文件"><a href="#合并分卷后的文件" class="headerlink" title="合并分卷后的文件"></a>合并分卷后的文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat test.tar.gz* &gt;&gt; xxx.tar.gz</span><br></pre></td></tr></table></figure>

<p>将所有分片合并成xxx.tar.gz</p>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>this指针</title>
    <url>/2020/03/21/this%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<h2 id="C-this指针"><a href="#C-this指针" class="headerlink" title="C++this指针"></a>C++this指针</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// this指针测试.cpp : 定义控制台应用程序的入口点。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, _TCHAR* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class">	&#123;</span></span><br><span class="line">		<span class="keyword">int</span> x;</span><br><span class="line">		<span class="keyword">int</span> y;</span><br><span class="line">		<span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">this</span>-&gt;x = x;</span><br><span class="line">			<span class="keyword">this</span>-&gt;y = y;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">this</span>-&gt;x + <span class="keyword">this</span>-&gt;y;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">int</span> <span class="title">getaddr</span><span class="params">()</span></span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> (DWORD)((<span class="keyword">int</span> *)<span class="keyword">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	Base b;</span><br><span class="line">	<span class="keyword">int</span> c=b.add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">int</span> d = b.getaddr();</span><br><span class="line">	<span class="comment">//printf("%d", c);</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%X"</span>, d);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将this 指针转成DWORD的值发现是个地址</p>
<p>看反汇编</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">004F147E  push        2  </span><br><span class="line">004F1480  push        1  </span><br><span class="line">004F1482  lea         ecx,[b] </span><br><span class="line">004F1485  call        &#96;main&#39;::&#96;2&#39;::Base::add (04F13C0h)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">struct Base</span><br><span class="line">	&#123;</span><br><span class="line">		int x;</span><br><span class="line">		int y;</span><br><span class="line">		int add(int x, int y)</span><br><span class="line">		&#123;</span><br><span class="line">004F13CB  push        edi  </span><br><span class="line">004F13CC  push        ecx  </span><br><span class="line">004F13CD  lea         edi,[ebp-0CCh]  </span><br><span class="line">004F13D3  mov         ecx,33h  </span><br><span class="line">004F13D8  mov         eax,0CCCCCCCCh  </span><br><span class="line">004F13DD  rep stos    dword ptr es:[edi]  </span><br><span class="line">004F13DF  pop         ecx  </span><br><span class="line">004F13E0  mov         dword ptr [this],ecx  </span><br><span class="line">			this-&gt;x &#x3D; x;</span><br></pre></td></tr></table></figure>

<p>分析</p>
<p>004F1482  lea         ecx,[b]<br>004F1485  call        <code>main&#39;::</code>2’::Base::add (04F13C0h)</p>
<p>1、在调用了Base::add (04F13C0h)函数之前，将变量b的地址放在ecx寄存器中</p>
<p>2、进入add函数中 ，在给栈帧分配缓冲区之前，做了一个动作，即push ecx，因为下面要用到这个ecx寄存器计数，所以暂存。</p>
<p>3、缓冲区填充之后，pop ecx将ecx中的值取出,然后这个VS在汇编上把ecx的值赋值到[this]上。直接看原始反汇编</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">004F13E0 89 4D F8             mov         dword ptr [ebp-8],ecx  </span><br><span class="line">			this-&gt;x &#x3D; x;</span><br><span class="line">004F13E3 8B 45 F8             mov         eax,dword ptr [ebp-8]  </span><br><span class="line">004F13E6 8B 4D 08             mov         ecx,dword ptr [ebp+8]  </span><br><span class="line">004F13E9 89 08                mov         dword ptr [eax],ecx  </span><br><span class="line">			this-&gt;y &#x3D; y;</span><br><span class="line">004F13EB 8B 45 F8             mov         eax,dword ptr [ebp-8]  </span><br><span class="line">004F13EE 8B 4D 0C             mov         ecx,dword ptr [ebp+0Ch]  </span><br><span class="line">004F13F1 89 48 04             mov         dword ptr [eax+4],ecx</span><br></pre></td></tr></table></figure>



<p>先将ecx的值，也就是变量b的地址的地址,放到局部变量ebp-8里，再将ebp-8里的值放到eax中，实际上就是eax=ecx,再将传入的参数x赋值给ecx,再将ecx辅助给[eax],完成一一次传参</p>
<p>4、分析getaddr函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">		int getaddr()</span><br><span class="line">		&#123;</span><br><span class="line">004F1420 55                   push        ebp  </span><br><span class="line">004F1421 8B EC                mov         ebp,esp  </span><br><span class="line">004F1423 81 EC CC 00 00 00    sub         esp,0CCh  </span><br><span class="line">004F1429 53                   push        ebx  </span><br><span class="line">004F142A 56                   push        esi  </span><br><span class="line">004F142B 57                   push        edi  </span><br><span class="line">004F142C 51                   push        ecx  </span><br><span class="line">004F142D 8D BD 34 FF FF FF    lea         edi,[ebp+FFFFFF34h]  </span><br><span class="line">004F1433 B9 33 00 00 00       mov         ecx,33h  </span><br><span class="line">004F1438 B8 CC CC CC CC       mov         eax,0CCCCCCCCh  </span><br><span class="line">004F143D F3 AB                rep stos    dword ptr es:[edi]  </span><br><span class="line">004F143F 59                   pop         ecx  </span><br><span class="line">004F1440 89 4D F8             mov         dword ptr [ebp-8],ecx  </span><br><span class="line">			return (DWORD)((int *)this);</span><br><span class="line">004F1443 8B 45 F8             mov         eax,dword ptr [ebp-8]  </span><br><span class="line">		&#125;</span><br><span class="line">004F1446 5F                   pop         edi  </span><br><span class="line">004F1447 5E                   pop         esi  </span><br><span class="line">004F1448 5B                   pop         ebx  </span><br><span class="line">004F1449 8B E5                mov         esp,ebp  </span><br><span class="line">004F144B 5D                   pop         ebp  </span><br><span class="line">004F144C C3                   ret</span><br></pre></td></tr></table></figure>

<p>我返回this指针的DWORD的值,看看反汇编怎么显示</p>
<p>直接就是将ecx赋值给[ebp-8]然后,返回[ebp-8] ，可见 ecx的就是这个this指针了，那么ecx是存着这个变量b的首地址,所以this的指针的值就是当前结构体变量的首地址。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu18.04开机自启动脚本设置</title>
    <url>/2020/02/29/ubuntu18-04%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>ubuntu18.04 开机自启动脚本设置</p>
<p>1、建立rc-local.service文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/systemd/system/rc-local.service</span><br></pre></td></tr></table></figure>

<p>2、将下列内容复制进rc-local.service文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=/etc/rc.local Compatibility</span><br><span class="line">ConditionPathExists=/etc/rc.local</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/rc.local start</span><br><span class="line">TimeoutSec=0</span><br><span class="line">StandardOutput=tty</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">SysVStartPriority=99</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>3、创建文件rc.local</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/rc.local</span><br></pre></td></tr></table></figure>

<p>4、将下列内容复制进rc.local文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh -e</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rc.local</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This script is executed at the end of each multiuser runlevel.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Make sure that the script will <span class="string">"exit 0"</span> on success or any other</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> value on error.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> In order to <span class="built_in">enable</span> or <span class="built_in">disable</span> this script just change the execution</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> bits.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> By default this script does nothing.</span></span><br><span class="line">echo "看到这行字，说明添加自启动脚本成功。" &gt; /usr/local/test.log</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<p>其中 ，#!/bin/sh 一定要加 不然不行，-e是忽略错误，可以不加</p>
<p>5、给rc.local加上权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /etc/rc.local</span><br></pre></td></tr></table></figure>

<p>6、启用服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable rc-local</span><br></pre></td></tr></table></figure>

<p>7、启动服务并检查状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start rc-local.service</span><br><span class="line">sudo systemctl status rc-local.service</span><br></pre></td></tr></table></figure>

<p>8、重启并检查test.log文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /usr/local/test.log</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>DialogBox模板</title>
    <url>/2020/02/27/DialogBox%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h3 id="Win32编程中DialogBox的模板代码"><a href="#Win32编程中DialogBox的模板代码" class="headerlink" title="Win32编程中DialogBox的模板代码"></a>Win32编程中DialogBox的模板代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">BOOL CALLBACK <span class="title">DialogFunc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	HWND hwndDlg,</span></span></span><br><span class="line"><span class="function"><span class="params">	UINT UMsg,</span></span></span><br><span class="line"><span class="function"><span class="params">	WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">	LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> WINAPI <span class="title">WinMain</span><span class="params">(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, <span class="keyword">int</span> nCmdShow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	Hinsapp = hInstance;</span><br><span class="line">	DialogBox(hInstance, MAKEINTRESOURCE(IDD_DIALOG1), <span class="literal">NULL</span>, DialogFunc);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//窗口回调</span></span><br><span class="line"><span class="function">BOOL CALLBACK <span class="title">DialogFunc</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">	HWND hwndDlg,</span></span></span><br><span class="line"><span class="function"><span class="params">	UINT UMsg,</span></span></span><br><span class="line"><span class="function"><span class="params">	WPARAM wParam,</span></span></span><br><span class="line"><span class="function"><span class="params">	LPARAM lParam</span></span></span><br><span class="line"><span class="function"><span class="params">	)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">switch</span> (UMsg)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> WM_NOTIFY:</span><br><span class="line">		&#123;</span><br><span class="line">			NMHDR * pNMHDR = (NMHDR*)lParam;</span><br><span class="line">			<span class="keyword">if</span> (wParam == IDC_LIST_PROCESS &amp;&amp; pNMHDR-&gt;code == NM_CLICK)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="comment">//listview process 单击时</span></span><br><span class="line">				<span class="comment">//MessageBox(NULL, TEXT("点击了listview"), TEXT("INIT"), MB_OK);</span></span><br><span class="line">				<span class="comment">//EnumSingleProcessMoudle(GetDlgItem(hwndDlg, IDC_LIST_PROCESS), wParam, lParam);</span></span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> TRUE;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">			EndDialog(hwndDlg, <span class="number">0</span>);</span><br><span class="line">		<span class="keyword">case</span>  WM_INITDIALOG:</span><br><span class="line">			InitProcessView(hwndDlg);</span><br><span class="line">			<span class="comment">//MessageBox(NULL, TEXT("WM_INITDIALOG"), TEXT("INIT"), MB_OK);</span></span><br><span class="line">			<span class="keyword">return</span> TRUE;</span><br><span class="line">		<span class="keyword">case</span>  WM_COMMAND:</span><br><span class="line">			<span class="keyword">switch</span> (LOWORD(wParam))</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">case</span> IDC_BUTTON_PEVIEW:</span><br><span class="line">						<span class="keyword">return</span> TRUE;</span><br><span class="line"></span><br><span class="line">				<span class="keyword">case</span> IDC_BUTTON_ABOUT:</span><br><span class="line">					<span class="comment">//MessageBox(NULL, TEXT("IDC_BUTTON_ABOUT"), TEXT("ABOUT"), MB_OK);</span></span><br><span class="line">					<span class="keyword">return</span> TRUE;</span><br><span class="line">				<span class="keyword">case</span> IDC_BUTTON_QUIT:</span><br><span class="line">					EndDialog(hwndDlg, <span class="number">0</span>);</span><br><span class="line">					<span class="keyword">return</span> TRUE;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">return</span> FALSE;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>python源码安装</title>
    <url>/2020/02/22/python%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.wget获取安装包,安装依赖：</span><br><span class="line">  wget http:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.6.2&#x2F;Python-3.6.2.tgz</span><br><span class="line">  sudo apt-get install openssl</span><br><span class="line">  sudo apt-get install libssl-dev</span><br><span class="line">  centos:yum install openssl-devel -y</span><br><span class="line"> </span><br><span class="line">2.解压安装包：</span><br><span class="line">  tar -xvzf Python-3.6.2.tgz</span><br><span class="line"> </span><br><span class="line">3.检查安装平台属性，系统是否有编译时所需要额库，以及库的版本是否满足编译需要</span><br><span class="line">  .&#x2F;configure --with-ssl  (--with-ssl  参数一定要带上，不然pip3不能用)</span><br><span class="line"> </span><br><span class="line">4.编译源码</span><br><span class="line">  make</span><br><span class="line"> </span><br><span class="line">5.成功编译之后，安装</span><br><span class="line">  sudo make install</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>2020到来</title>
    <url>/2020/01/23/2020%E7%9A%84%E5%BC%80%E5%A7%8B/</url>
    <content><![CDATA[<h3 id="2020的到来，愿我的家人身体健康，万事如意，平平安安。"><a href="#2020的到来，愿我的家人身体健康，万事如意，平平安安。" class="headerlink" title="2020的到来，愿我的家人身体健康，万事如意，平平安安。"></a>2020的到来，愿我的家人身体健康，万事如意，平平安安。</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while True:</span><br><span class="line">	printf(&quot;福&quot;)</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
